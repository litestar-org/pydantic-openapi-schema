[tool.poetry]
name = "pydantic-openapi-schema"
version = "1.5.1"
description = "OpenAPI Schema using pydantic. Forked for Starlite-API from 'openapi-schema-pydantic'."
authors = ["Na'aman Hirschfeld <nhirschfeld@gmail.com>"]
maintainers = [
  "Na'aman Hirschfeld <nhirschfeld@gmail.com>",
  "Peter Schutt <peter.github@proton.me>",
  "Cody Fincher <cody.fincher@gmail.com>",
  "Janek Nouvertn√© <provinzkraut@posteo.de>",
  "Konstantin Mikhailov <konstantin.mikhailov@proton.me>"
]
license = "MIT"
keywords = ["openAPI", "open-api", "starlite", "pydantic", "schema"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]
include = ["CHANGELOG.md"]
packages = [
    { include = "pydantic_openapi_schema" },
]
[tool.poetry.dependencies]
python = ">=3.8"
pydantic = ">=1.10.0"
email-validator = "*"

[tool.poetry.dev-dependencies]
pre-commit = "*"
pytest = "*"
pytest-cov = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.MESSAGE_CONTROL]
disable = [
    "line-too-long",
    "missing-class-docstring",
    "missing-module-docstring",
    "super-init-not-called",
    "too-few-public-methods",
    "duplicate-code",
    "ungrouped-imports",
]
enable = "useless-suppression"
extension-pkg-whitelist = "pydantic"

[tool.pylint.REPORTS]
reports = "no"

[tool.pylint.FORMAT]
max-line-length = "120"

[tool.pylint.VARIABLES]
ignored-argument-names = "args|kwargs|_|__"

[tool.pylint.BASIC]
good-names = "_,i,e,fn,v"

[tool.coverage.run]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if TYPE_CHECKING:',
    'except ImportError as e:',
    '\.\.\.'
]

[tool.pycln]
all = true

[tool.pydocstyle]
add-ignore = "D100,D104,D105,D106,D202,D205,D415"
add-select = "D401,D404,D417"
convention = "google"
match_dir = "pydantic_openapi_schema"
